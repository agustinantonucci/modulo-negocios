{"version":3,"sources":["apollo/ApolloClient.js","graphql/query/Negocios.js","graphql/query/Configuracion.js","components/context/GlobalContext.js","helpers/conversorMonedas.js","components/ui/table/Info.js","components/ui/table/InfoCotizacion.js","components/ui/table/TablaNegocios.js","helpers/getCotizacionDolar.js","helpers/getCotizacionReal.js","App.js","index.js"],"names":["PROTOCOL","window","location","protocol","HOSTNAME","hostname","URL","client","ApolloClient","connectToDevTools","cache","InMemoryCache","link","HttpLink","uri","GET_NEGOCIOS","gql","GET_CONFIGURACION","GlobalContext","createContext","conversorMonedas","elemento","monedaDefecto","cotizacionDolar","cotizacionReal","nuevoImporte","mon_id","neg_valor","Info","title","placement","children","content","trigger","type","style","padding","InfoCircleOutlined","paddingLeft","marginRight","color","infoCotizacion","monIsoBase","ultimaActualizacion","cotizacionSegunMonedaBase","moneda1","moneda2","cotizacion1","cotizacion2","className","toLocaleString","maximumFractionDigits","moment","format","TablaNegocios","urlParameter","search","split","idCliente","searchInput","useRef","useState","listadoNegocios","setListadoNegocios","listadoNegociosFiltrados","setListadoNegociosFiltrados","listadoEtiquetas","setListadoEtiquetas","totalMostrar","setTotalMostrar","totalEtapaMostrar","setTotalEtapaMostrar","cantAbiertos","setCantAbiertos","cantGanados","setCantGanados","cantPerdidos","setCantPerdidos","pipelines","setPipelines","tipoFiltro","setTipoFiltro","setMonIsoBase","verInfo","setVerInfo","useContext","setReloadingApp","idNeg","usuA","setUsuA","idEtapa","setIdEtapa","setIdNeg","pipeURL","idUser","setPipeURL","localStorage","setItem","useQuery","variables","Number","data","getConfiguracion","loading","error","useEffect","dataConfig","JSON","parse","getConfiguracionResolver","negocios","getNegociosIframeResolver","dataNeg","dataTags","dataPipelines","map","item","text","pip_nombre","value","sumaNegociosAbiertos","sumaNegociosCerrados","sumaEtapaAbiertos","sumaEtapaCerrados","negociosAbiertos","filter","negocio","neg_estado","negociosCerrados","length","mon_iso","eta_avance","dataIndex","getDate","date","reverse","join","columns","key","filters","onFilter","record","render","align","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","placeholder","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","onClick","icon","SearchOutlined","size","width","handleReset","filterIcon","filtered","undefined","toString","toLowerCase","includes","etiquetasNegocios","x","neg_id","element","idx","etq_color","etq_nombre","etq_id","sorter","a","b","minimumFractionDigits","neg_fechacreacion","localeCompare","neg_fechacierre","LikeOutlined","DislikeOutlined","handleClickEstado","estado","cursor","height","borderColor","borderWidth","rowKey","dataSource","pagination","position","onRow","val","PORT","port","u","pathname","getItem","href","obtenerFila","pip_id","getCotizacionDolar","config","method","url","axios","res","console","log","err","getCotizacionReal","App","setCotizacionDolar","setCotizacionReal","setUltimaActualizacion","reloadingApp","setIdUser","urlSearch","idUserFromParams","then","venta","fecha","Provider","locale","esES","ApolloProvider","id","tip","spinning","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.5c3122a8.chunk.js","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nconst PORT = \"4002\";\nconst PROTOCOL = window.location.protocol;\nconst HOSTNAME = window.location.hostname;\nconst URL = `${PROTOCOL}//${HOSTNAME}:${PORT}`;\n\nexport const client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    //uri: URL,\n    // uri: `http://10.0.0.141:4002`,\n    // uri: \"http://170.239.49.41:4002\",\n    //uri: \"http://beeapp.binamics.com.ar:4002\",\n    // uri: \"http://localhost:4002\",\n     uri: URL,\n    //uri: \"http://10.0.0.28:4002\",\n    //uri: \"http://10.0.0.153:4002\",\n    // uri: \"http://170.239.49.41:4002\",\n  }),\n});\n","import { gql } from \"@apollo/client\";\n\nexport const GET_NEGOCIOS = gql`\n  query getNegociosIframe($idCliente: Int) {\n    getNegociosIframeResolver(idCliente: $idCliente)\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CONFIGURACION = gql`\n  query getConfig {\n    getConfiguracionResolver\n  }\n`;\n","import { createContext } from 'react';\n\nexport const GlobalContext = createContext([]);\n","export const conversorMonedas = (\n  elemento,\n  monedaDefecto,\n  cotizacionDolar,\n  cotizacionReal\n) => {\n  let nuevoImporte = 0;\n\n  if (elemento.mon_id !== monedaDefecto) {\n    if (monedaDefecto == 2) {\n      if (elemento.mon_id == 1) {\n        nuevoImporte = elemento.neg_valor * cotizacionDolar;\n      } else {\n        nuevoImporte = elemento.neg_valor * (cotizacionDolar / cotizacionReal);\n      }\n    } else if (monedaDefecto == 3) {\n      if (elemento.mon_id == 1) {\n        nuevoImporte = elemento.neg_valor * cotizacionReal;\n      } else {\n        nuevoImporte = elemento.neg_valor * (cotizacionReal / cotizacionDolar);\n      }\n    } else if (monedaDefecto == 1) {\n      if (elemento.mon_id == 2) {\n        nuevoImporte = elemento.neg_valor * (1 / cotizacionDolar);\n      } else {\n        nuevoImporte = elemento.neg_valor * (1 / cotizacionReal);\n      }\n    }\n  } else {\n    nuevoImporte = elemento.neg_valor;\n  }\n  \n  return {nuevoImporte};\n};\n","\nimport { Popover, Button } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst Info = ({ title, placement, children }) => {\n  return (\n    <>\n      <Popover placement={placement} title={title} content={children} trigger=\"click\">\n        <Button type=\"link\" style={{ padding: 0 }}>\n          {' '}\n          <InfoCircleOutlined style={{ paddingLeft: 0, marginRight: 7, color: \"#00b33c\" }} />\n        </Button>\n      </Popover>\n    </>\n  );\n};\n\nexport default Info;","import moment from \"moment\";\n\n\nexport const infoCotizacion = (monIsoBase, cotizacionDolar, cotizacionReal, ultimaActualizacion) => {\n  // Devuelve el componente correspondiente según la moneda base.\n\n  switch (monIsoBase) {\n    case \"AR$\":\n      //1. Si la moneda base es Pesos: moneda 1 = Dolar, moneda2= Real , cotizacion1=cotizacionDolar, Cotizacion2=Cotizacion real\n      return cotizacionSegunMonedaBase(\n        \"1 USD =\",\n        \"1 BRL =\",\n        1 / cotizacionDolar,\n        1 / cotizacionReal,\n        monIsoBase,\n        ultimaActualizacion\n      );\n\n    //2. Si la moneda base es Dolares:Moneda 1= AR$ moneda= 2 BRL, 1/cotizacion dolar , cotizacionReal/cotizacionDolar\n    case \"USD\":\n      return cotizacionSegunMonedaBase(\n        \"1 AR$ =\",\n        \"1 BRL =\",\n        cotizacionDolar,\n        cotizacionDolar / cotizacionReal,\n        monIsoBase,\n        ultimaActualizacion\n      );\n    //3. Si la moneda base es REAL:Moneda 1= AR$ moneda= 2 USD, 1/cotizacionReal , 1/cotizacionReal*cotizacionDolar\n    case \"BRL\":\n      return cotizacionSegunMonedaBase(\n        \"1 AR$ =\",\n        \"1 USD =\",\n        cotizacionReal,\n        (1 / cotizacionDolar * cotizacionReal),\n        monIsoBase,\n        ultimaActualizacion\n      );\n\n    default:\n      break;\n  }\n};\n\nconst cotizacionSegunMonedaBase = (\n    moneda1,\n    moneda2,\n    cotizacion1,\n    cotizacion2,\n    monIsoBase,\n    ultimaActualizacion\n  ) => {\n    return (\n      <div className=\"cotizaciones\">\n        {cotizacion2 ? (\n          <>\n            <p className=\"cotizaciones_p\">\n              <span className=\"cotizacion\">{moneda1}</span> {`${monIsoBase} `}{\" \"}\n              {cotizacion1.toLocaleString(\"de-DE\", {\n                maximumFractionDigits: 2,\n              })}\n            </p>\n            <p className=\"cotizaciones_p\">\n              <span className=\"cotizacion\">{moneda2}</span> {`${monIsoBase} `}{\" \"}\n              {cotizacion2.toLocaleString(\"de-DE\", {\n                maximumFractionDigits: 2,\n              })}\n            </p>\n            <p className=\"info_data cotizaciones_p\">\n              ultima actualizacion:{\" \"}\n              <strong>\n                {moment(ultimaActualizacion).format(\"DD/MM/YYYY hh:mm\")} hs\n              </strong>\n            </p>\n          </>\n        ) : (\n          <p className=\"info_data cotizaciones_p\">\n            Momentaneamente el servicio de cotizaciones se encuentra{\" \"}\n            <strong>suspendido.</strong>\n          </p>\n        )}\n      </div>\n    );\n  };","import {\n  Table,\n  Tag,\n  Space,\n  Input,\n  Button,\n  Card,\n  Popover,\n  Divider,\n  Tooltip,\n} from \"antd\";\nimport {\n  DislikeOutlined,\n  EyeOutlined,\n  LikeOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NEGOCIOS } from \"../../../graphql/query/Negocios\";\nimport { GET_CONFIGURACION } from \"../../../graphql/query/Configuracion\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport { useContext } from \"react\";\nimport { conversorMonedas } from \"../../../helpers/conversorMonedas\";\nimport Info from \"./Info\";\nimport { infoCotizacion } from \"./InfoCotizacion\";\n\nconst TablaNegocios = () => {\n  const url = window.location.search;\n  const urlParameter = url.split(\"=\");\n  const primerSplit = urlParameter[1].split(\"?\");\n  const idCliente = primerSplit[0];\n\n  const searchInput = useRef(null);\n  const [listadoNegocios, setListadoNegocios] = useState([]);\n  const [listadoNegociosFiltrados, setListadoNegociosFiltrados] = useState([]);\n  const [listadoEtiquetas, setListadoEtiquetas] = useState([]);\n  const [totalMostrar, setTotalMostrar] = useState([]);\n  const [totalEtapaMostrar, setTotalEtapaMostrar] = useState([]);\n  const [cantAbiertos, setCantAbiertos] = useState([]);\n  const [cantGanados, setCantGanados] = useState([]);\n  const [cantPerdidos, setCantPerdidos] = useState([]);\n  const [pipelines, setPipelines] = useState([]);\n  const [tipoFiltro, setTipoFiltro] = useState(\"abierto\");\n  const [monIsoBase, setMonIsoBase] = useState([]);\n  const [verInfo, setVerInfo] = useState([]);\n\n  const {\n    cotizacionDolar,\n    cotizacionReal,\n    ultimaActualizacion,\n    setReloadingApp,\n    usuA, \n    setUsuA,\n    idEtapa, \n    setIdEtapa,\n    idNeg,\n    setIdNeg,\n    idUser,\n    pipeURL, \n    setPipeURL\n  } = useContext(GlobalContext);\n\n  //console.log(idNeg);\n  localStorage.setItem(\"IdNeg\", idNeg);\n  localStorage.setItem(\"pipeURL\", pipeURL);\n\n  //console.log(pipeURL)\n\n  const { data, loading, error } = useQuery(GET_NEGOCIOS, {\n    variables: { idCliente: Number(idCliente) },\n  });\n\n  const { data: getConfiguracion } = useQuery(GET_CONFIGURACION);\n\n  useEffect(() => {\n    setReloadingApp(true);\n    setVerInfo(urlParameter[2] ? urlParameter[2] : \"0\");\n\n    if (data && getConfiguracion) {\n      const dataConfig = JSON.parse(getConfiguracion.getConfiguracionResolver);\n      const negocios = JSON.parse(data.getNegociosIframeResolver);\n\n      // console.log(negocios);\n\n      setListadoNegocios(negocios.dataNeg);\n\n      //console.log(verInfo);\n\n      setListadoEtiquetas(negocios.dataTags);\n      setPipelines(\n        negocios.dataPipelines.map((item) => {\n          return { text: item.pip_nombre, value: item.pip_nombre };\n        })\n      );\n\n      let sumaNegociosAbiertos = 0;\n      let sumaNegociosCerrados = 0;\n\n      let sumaEtapaAbiertos = 0;\n      let sumaEtapaCerrados = 0;\n\n      const negociosAbiertos = negocios.dataNeg.filter(\n        (negocio) => negocio.neg_estado === 0\n      );\n\n      const negociosCerrados = negocios.dataNeg.filter(\n        (negocio) => negocio.neg_estado !== 0\n      );\n\n      setListadoNegociosFiltrados(\n        tipoFiltro === \"abierto\"\n          ? negociosAbiertos\n          : tipoFiltro === \"cerrado\"\n          ? negociosCerrados\n          : listadoNegocios\n      );\n\n      setCantAbiertos(negociosAbiertos.length);\n      setCantGanados(\n        negociosCerrados.filter((negocio) => negocio.neg_estado === 1).length\n      );\n      setCantPerdidos(\n        negociosCerrados.filter((negocio) => negocio.neg_estado === 2).length\n      );\n\n      const monedaDefecto = dataConfig[0].mon_id;\n      setMonIsoBase(dataConfig[0].mon_iso);\n\n      negociosAbiertos.map((negocio) => {\n        const elemento = negocio;\n\n        const { nuevoImporte } = conversorMonedas(\n          elemento,\n          monedaDefecto,\n          cotizacionDolar,\n          cotizacionReal\n        );\n\n        sumaEtapaAbiertos += (nuevoImporte * negocio.eta_avance) / 100;\n        sumaNegociosAbiertos += nuevoImporte;\n      });\n\n      negociosCerrados.map((negocio) => {\n        const elemento = negocio;\n\n        const { nuevoImporte } = conversorMonedas(\n          elemento,\n          monedaDefecto,\n          cotizacionDolar,\n          cotizacionReal\n        );\n\n        sumaEtapaCerrados += (nuevoImporte * negocio.eta_avance) / 100;\n        sumaNegociosCerrados += nuevoImporte;\n      });\n\n      // const{ totalNegocios, totalEtapas } = calcularTotales(tipoFiltro, sumaNegociosAbiertos, sumaNegociosCerrados, sumaEtapaAbiertos, sumaEtapaCerrados);\n\n      // setTotalMostrar(totalNegocios);\n      // setTotalEtapaMostrar(totalEtapas);\n\n      tipoFiltro === \"abierto\"\n        ? (setTotalMostrar(sumaNegociosAbiertos),\n          setTotalEtapaMostrar(sumaEtapaAbiertos))\n        : tipoFiltro === \"cerrado\"\n        ? (setTotalMostrar(sumaNegociosCerrados),\n          setTotalEtapaMostrar(sumaEtapaCerrados))\n        : (setTotalMostrar(sumaNegociosAbiertos + sumaNegociosCerrados),\n          setTotalEtapaMostrar(sumaEtapaAbiertos + sumaEtapaCerrados));\n\n      setReloadingApp(false);\n    }\n  }, [data, getConfiguracion, tipoFiltro]);\n\n  //console.log(idUser);\n\n  \n  const obtenerFila = (val) => {\n    setIdNeg(val);\n    const PORT = window.location.port ? window.location.port : 80;\n    const PROTOCOL = window.location.protocol;\n    const HOSTNAME = window.location.hostname;\n    const loc = window.location.pathname;\n    const URL = `${PROTOCOL}//${HOSTNAME}:${PORT}`;\n\n    // console.log(\"URL \", URL);\n    const c = idUser;\n    const u = localStorage.getItem('usuario');\n    const e = pipeURL;\n    //console.log(\"usuarioLocalStorage: \", u);\n    //console.log(`${PROTOCOL}//${HOSTNAME}:${PORT}/tati/deal/?negId=${val}&userId=${u}`);\n\n    //window.location.href =`${PROTOCOL}//${HOSTNAME}:${PORT}/tati/deal/?negId=${val}&pipId=${e}&userId=${u}` //.28/tati\n    window.location.href = `${PROTOCOL}//${HOSTNAME}:${PORT}/duoc/deal/?negId=${val}&pipId=${e}&userId=${u}`; // .28/duoc y .153/duoc\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div\n        style={{\n          padding: 8,\n        }}\n      >\n        <Input\n          ref={searchInput}\n          placeholder={\"Buscar negocio\"}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Buscar\n          </Button>\n          <Button\n            onClick={() => clearFilters && handleReset(clearFilters)}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Reiniciar\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        style={{\n          color: filtered ? \"#1890ff\" : undefined,\n        }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n  });\n\n  const getDate = (date) => {\n    const fecha = date.split(\"T\");\n\n    return fecha[0].split(\"-\").reverse().join(\"/\");\n  };\n\n  const columns = [\n    {\n      title: \"Embudo\",\n      dataIndex: \"pip_nombre\",\n      key: \"pip_nombre\",\n      filters: pipelines,\n      onFilter: (value, record) => {\n        return record.pip_nombre === value;\n      },\n      render: (dataIndex) => {\n        return <p className=\"columna-color\">{dataIndex}</p>;\n      },\n    },\n    {\n      title: \"Etapa\",\n      dataIndex: \"eta_nombre\",\n      key: \"eta_nombre\",\n      align: \"left\",\n    },\n    {\n      title: \"Negocio\",\n      dataIndex: \"neg_asunto\",\n      key: \"neg_asunto\",\n      ...getColumnSearchProps(\"neg_asunto\"),\n      render: (dataIndex, item) => {\n        const etiquetasNegocios = listadoEtiquetas.filter(\n          (x) => x.neg_id === item.neg_id\n        );\n        return (\n          <>\n            <p className=\"columna-color\">{dataIndex}</p>\n            <div\n              className={etiquetasNegocios.length > 0 ? \"div-contenedor\" : \"\"}\n            >\n              {etiquetasNegocios.map((element, idx) => {\n                return (\n                  <Popover\n                    key={idx}\n                    content={etiquetasNegocios.map((element) => {\n                      return (\n                        <Tag color={element.etq_color} key={element.etq_id}>\n                          {element.etq_nombre}\n                        </Tag>\n                      );\n                    })}\n                  >\n                    <Tag\n                      color={element.etq_color}\n                      key={element.etq_id}\n                      className=\"tags\"\n                    ></Tag>\n                  </Popover>\n                );\n              })}\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Importe\",\n      dataIndex: \"neg_valor\",\n      key: \"neg_valor\",\n      align: \"right\",\n      sorter: (a, b) => a.neg_valor - b.neg_valor,\n      render: (dataIndex, item) => (\n        <>{`${item.mon_iso} ${dataIndex.toLocaleString(\"de-DE\", {\n          minimumFractionDigits: 0,\n        })}`}</>\n      ),\n    },\n    {\n      title: \"% Etapa\",\n      dataIndex: \"eta_avance\",\n      key: \"eta_avance\",\n      align: \"right\",\n      sorter: (a, b) => a.eta_avance - b.eta_avance,\n    },\n    {\n      title: \"Fecha de Creación\",\n      dataIndex: \"neg_fechacreacion\",\n      key: \"neg_fechacreacion\",\n      align: \"center\",\n      sorter: (a, b) => a.neg_fechacreacion.localeCompare(b.neg_fechacreacion),\n      render: (dataIndex) => getDate(dataIndex),\n    },\n    {\n      title: \"Fecha de Cierre\",\n      dataIndex: \"neg_fechacierre\",\n      key: \"neg_fechacierre\",\n      align: \"center\",\n      sorter: (a, b) => a.neg_fechacierre.localeCompare(b.neg_fechacierre),\n      render: (dataIndex) => getDate(dataIndex),\n    },\n    {\n      title: \"...\",\n      key: \"tipoCerrado\",\n      align: \"center\",\n      render: (dataIndex, item) => {\n        return (\n          <span>\n            {tipoFiltro === \"cerrado\" ? (\n              <>\n                {item.neg_estado === 1 && (\n                  <Tooltip title=\"Cerrado Ganado\" placement=\"left\">\n                    <LikeOutlined style={{ color: \"green\" }} />\n                  </Tooltip>\n                )}\n                {item.neg_estado === 2 && (\n                  <Tooltip title=\"Cerrado Perdido\" placement=\"left\">\n                    <DislikeOutlined style={{ color: \"red\" }} />\n                  </Tooltip>\n                )}\n              </>\n            ) : null}\n          </span>\n        );\n      },\n    },\n  ];\n\n  const handleClickEstado = (estado) => {\n    setTipoFiltro(estado);\n    if (estado === \"abierto\") {\n      setListadoNegociosFiltrados(\n        listadoNegocios.filter((x) => x.neg_estado === 0)\n      );\n    } else if (estado === \"cerrado\") {\n      setListadoNegociosFiltrados(\n        listadoNegocios.filter((x) => x.neg_estado !== 0)\n      );\n    } else {\n      setListadoNegociosFiltrados(listadoNegocios);\n    }\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n  };\n\n  return (\n    <>\n      <div className=\"card-wrapper\">\n        <div className=\"card-contadores\">\n          <div\n            className={\n              tipoFiltro === \"total\"\n                ? \"div-secundario dashed\"\n                : \"div-secundario\"\n            }\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              handleClickEstado(\"total\");\n            }}\n          >\n            <p className=\"texto\">NEGOCIOS</p>\n            <p className=\"numeros\">\n              {cantAbiertos + cantGanados + cantPerdidos}\n            </p>\n          </div>\n          <Divider\n            type=\"vertical\"\n            style={{\n              height: \"100%\",\n              borderColor: \"#f0f0f0\",\n              borderWidth: \"2px\",\n            }}\n          />\n          <div>\n            <div\n              className={\n                tipoFiltro === \"abierto\"\n                  ? \"div-secundario dashed\"\n                  : \"div-secundario\"\n              }\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                handleClickEstado(\"abierto\");\n              }}\n            >\n              <p className=\"texto\">ABIERTOS</p>\n              <p className=\"numeros\">{cantAbiertos}</p>\n            </div>\n            <hr className={tipoFiltro === \"total\" ? \"hr1\" : \"cancela-hr\"} />\n            <div\n              className={\n                tipoFiltro === \"cerrado\"\n                  ? \"div-secundario dashed\"\n                  : \"div-secundario\"\n              }\n              style={{ cursor: \"pointer\" }}\n              onClick={() => handleClickEstado(\"cerrado\")}\n            >\n              <p className=\"texto\">CERRADOS</p>\n              <p className=\"numeros\">{cantGanados + cantPerdidos}</p>\n            </div>\n          </div>\n        </div>\n        <Card className=\"card-content\">\n          <div className=\"div-content\">\n            <p className=\"totales\">\n              {`U$D ${totalMostrar.toLocaleString(\"de-DE\", {\n                minimumFractionDigits: 0,\n              })}`}\n            </p>\n            <p className=\"descripcion\">Total negocios</p>\n          </div>\n        </Card>\n        <Card className=\"card-content\">\n          <div className=\"div-content\">\n            <p className=\"totales\">\n              {`U$D ${totalEtapaMostrar.toLocaleString(\"de-DE\", {\n                minimumFractionDigits: 0,\n              })}`}\n            </p>\n            <p className=\"descripcion\">Total % por etapa</p>\n          </div>\n        </Card>\n        {verInfo === \"0\" ? (\n          <div className=\"filter-data\">\n            <Info placement={\"left\"} title={`Cotización ${monIsoBase}`}>\n              {infoCotizacion(\n                monIsoBase,\n                cotizacionDolar,\n                cotizacionReal,\n                ultimaActualizacion\n              )}\n            </Info>\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <Table\n        rowKey={\"neg_id\"}\n        size={\"small\"}\n        dataSource={listadoNegociosFiltrados}\n        columns={columns}\n        pagination={{\n          position: [\"none\", \"bottomCenter\"],\n        }}\n        onRow={(record) => ({\n          onClick: () => {\n            //console.log(record.pip_id)\n             obtenerFila(record.neg_id);\n             setPipeURL(record.pip_id)\n          },\n        })}\n      />\n    </>\n  );\n};\n\nexport default TablaNegocios;\n","import axios from \"axios\";\n\nexport const getCotizacionDolar = async () => {\n  try {\n    const config = {\n      method: \"GET\",\n      url: \"https://api-cotizaciones-tt7h9.ondigitalocean.app/api/dolaroficial\",\n    };\n\n    const res = await axios(config);\n    return res;\n  } catch (error) {\n    console.log(err);\n  }\n};\n","import axios from \"axios\";\n\nexport const getCotizacionReal = async () => {\n  try {\n    const config = {\n      method: \"GET\",\n      url: \"https://api-cotizaciones-tt7h9.ondigitalocean.app/api/real/nacion\",\n    };\n\n    const res = await axios(config);\n    return res;\n  } catch (error) {\n    console.log(err);\n  }\n};\n","import { ApolloProvider } from \"@apollo/client\";\nimport { ConfigProvider, Spin } from \"antd\";\nimport { client } from \"./apollo/ApolloClient\";\nimport esES from \"antd/lib/locale/es_ES\";\nimport \"./App.css\";\nimport TablaNegocios from \"./components/ui/table/TablaNegocios\";\nimport { GlobalContext } from \"./components/context/GlobalContext\";\nimport { useEffect, useState } from \"react\";\nimport {getCotizacionDolar} from '../src/helpers/getCotizacionDolar'; \nimport {getCotizacionReal} from '../src/helpers/getCotizacionReal';\n\nconst App = () => {\n\n  const [cotizacionDolar, setCotizacionDolar] = useState(0);\n  const [cotizacionReal, setCotizacionReal] = useState(0);\n  const [ultimaActualizacion, setUltimaActualizacion] = useState(\"\")\n  const [reloadingApp, setReloadingApp] = useState(false);\n  const [pipeURL, setPipeURL ] = useState();\n  const [idNeg, setIdNeg] = useState();\n  const [idUser, setIdUser] = useState(\"\");\n\n\n  useEffect(() => {\n    const url = window.location;\n    const urlSearch = url.search;\n\n    if (urlSearch) {\n      const params = urlSearch.split(\"=\");\n      //console.log(params);\n      const idUserFromParams = params[1];\n      setIdUser(Number(idUserFromParams));\n      // console.log(\"Usuario ->\", idUserFromParams);\n    }\n  }, []);\n\n\n  getCotizacionDolar().then((res) => {\n    if (res.data){\n      setCotizacionDolar(1 / (Number(res.data.venta)));\n      setUltimaActualizacion(res.data.fecha);\n      setReloadingApp(false);\n    }\n  });\n\n  getCotizacionReal().then((res) => {\n    if (res.data) setCotizacionReal(1 / (Number(res.data.venta)));\n  });\n\n  return (\n    <GlobalContext.Provider value={{cotizacionDolar, cotizacionReal, ultimaActualizacion, setReloadingApp, idNeg, setIdNeg, idUser, setIdUser, pipeURL, setPipeURL}}>\n      <ConfigProvider locale={esES}>\n        <ApolloProvider client={client}>\n          <Spin id=\"main_loader\" tip=\"Cargando\" spinning={reloadingApp} className=\"color\">\n            <TablaNegocios />\n          </Spin>\n        </ApolloProvider>\n      </ConfigProvider>\n    </GlobalContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}