{"version":3,"sources":["apollo/ApolloClient.js","graphql/query/Negocios.js","graphql/query/Configuracion.js","components/context/GlobalContext.js","components/ui/table/Info.js","components/ui/table/InfoCotizacion.js","components/ui/table/TablaNegocios.js","helpers/conversorMonedas.js","helpers/getCotizacionDolar.js","helpers/getCotizacionReal.js","App.js","index.js"],"names":["PROTOCOL","window","location","protocol","HOSTNAME","hostname","URL","client","ApolloClient","connectToDevTools","cache","InMemoryCache","link","HttpLink","uri","GET_NEGOCIOS","gql","GET_CONFIGURACION","GlobalContext","createContext","Info","title","placement","children","content","trigger","type","style","padding","InfoCircleOutlined","paddingLeft","marginRight","color","infoCotizacion","monIsoBase","cotizacionDolar","cotizacionReal","ultimaActualizacion","cotizacionSegunMonedaBase","moneda1","moneda2","cotizacion1","cotizacion2","className","toLocaleString","maximumFractionDigits","moment","format","TablaNegocios","idCliente","search","split","searchInput","useRef","useState","listadoNegocios","setListadoNegocios","listadoNegociosFiltrados","setListadoNegociosFiltrados","listadoEtiquetas","setListadoEtiquetas","totalNegocio","setTotalNegocio","totalEtapa","setTotalEtapa","cantAbiertos","setCantAbiertos","cantGanados","setCantGanados","cantPerdidos","setCantPerdidos","pipelines","setPipelines","tipoFiltro","setTipoFiltro","setMonIsoBase","useContext","useQuery","variables","Number","data","getConfiguracion","loading","error","useEffect","dataConfig","JSON","parse","getConfiguracionResolver","negocios","getNegociosIframeResolver","dataNeg","dataTags","dataPipelines","map","item","text","pip_nombre","value","sumaEtapa","conteoAbiertos","conteoGanados","conteoPerdidos","totalNegocios","element","neg_estado","elemento","monedaDefecto","nuevoImporte","mon_id","neg_valor","conversorMonedas","eta_avance","mon_iso","dataIndex","getDate","date","reverse","join","columns","key","filters","onFilter","record","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","placeholder","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","onClick","icon","SearchOutlined","size","width","handleReset","filterIcon","filtered","undefined","toString","toLowerCase","includes","render","etiquetasNegocios","filter","x","neg_id","length","idx","etq_color","etq_nombre","etq_id","align","sorter","a","b","minimumFractionDigits","neg_fechacreacion","localeCompare","neg_fechacierre","LikeOutlined","DislikeOutlined","handleClickEstado","estado","cursor","height","borderColor","borderWidth","rowKey","dataSource","pagination","position","getCotizacionDolar","config","method","url","axios","res","console","log","err","getCotizacionReal","App","setCotizacionDolar","setCotizacionReal","setUltimaActualizacion","then","venta","fecha","Provider","locale","esES","ApolloProvider","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.1c6cfc16.chunk.js","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nconst PORT = \"4002\";\nconst PROTOCOL = window.location.protocol;\nconst HOSTNAME = window.location.hostname;\nconst URL = `${PROTOCOL}//${HOSTNAME}:${PORT}`;\n\nexport const client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: URL,\n    // uri: `http://10.0.0.141:4002`,\n    // uri: \"http://170.239.49.41:4002\",\n    //uri: \"http://beeapp.binamics.com.ar:4002\",\n    // uri: \"http://localhost:4002\",\n     //uri: URL,\n     //uri: \"http://10.0.0.28:4002\",\n    // uri: \"http://170.239.49.41:4002\",\n  }),\n});\n","import { gql } from \"@apollo/client\";\n\nexport const GET_NEGOCIOS = gql`\n  query getNegociosIframe($idCliente: Int) {\n    getNegociosIframeResolver(idCliente: $idCliente)\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CONFIGURACION = gql`\n  query getConfig {\n    getConfiguracionResolver\n  }\n`;\n","import { createContext } from 'react';\n\nexport const GlobalContext = createContext([]);\n","\nimport { Popover, Button } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst Info = ({ title, placement, children }) => {\n  return (\n    <>\n      <Popover placement={placement} title={title} content={children} trigger=\"click\">\n        <Button type=\"link\" style={{ padding: 0 }}>\n          {' '}\n          <InfoCircleOutlined style={{ paddingLeft: 0, marginRight: 7, color: \"#00b33c\" }} />\n        </Button>\n      </Popover>\n    </>\n  );\n};\n\nexport default Info;","import moment from \"moment\";\n\n\nexport const infoCotizacion = (monIsoBase, cotizacionDolar, cotizacionReal, ultimaActualizacion) => {\n  // Devuelve el componente correspondiente según la moneda base.\n\n  switch (monIsoBase) {\n    case \"AR$\":\n      //1. Si la moneda base es Pesos: moneda 1 = Dolar, moneda2= Real , cotizacion1=cotizacionDolar, Cotizacion2=Cotizacion real\n      return cotizacionSegunMonedaBase(\n        \"1 USD =\",\n        \"1 BRL =\",\n        1 / cotizacionDolar,\n        1 / cotizacionReal,\n        monIsoBase,\n        ultimaActualizacion\n      );\n\n    //2. Si la moneda base es Dolares:Moneda 1= AR$ moneda= 2 BRL, 1/cotizacion dolar , cotizacionReal/cotizacionDolar\n    case \"USD\":\n      return cotizacionSegunMonedaBase(\n        \"1 AR$ =\",\n        \"1 BRL =\",\n        cotizacionDolar,\n        cotizacionDolar / cotizacionReal,\n        monIsoBase,\n        ultimaActualizacion\n      );\n    //3. Si la moneda base es REAL:Moneda 1= AR$ moneda= 2 USD, 1/cotizacionReal , 1/cotizacionReal*cotizacionDolar\n    case \"BRL\":\n      return cotizacionSegunMonedaBase(\n        \"1 AR$ =\",\n        \"1 USD =\",\n        cotizacionReal,\n        (1 / cotizacionDolar * cotizacionReal),\n        monIsoBase,\n        ultimaActualizacion\n      );\n\n    default:\n      break;\n  }\n};\n\nconst cotizacionSegunMonedaBase = (\n    moneda1,\n    moneda2,\n    cotizacion1,\n    cotizacion2,\n    monIsoBase,\n    ultimaActualizacion\n  ) => {\n    return (\n      <div className=\"cotizaciones\">\n        {cotizacion2 ? (\n          <>\n            <p className=\"cotizaciones_p\">\n              <span className=\"cotizacion\">{moneda1}</span> {`${monIsoBase} `}{\" \"}\n              {cotizacion1.toLocaleString(\"de-DE\", {\n                maximumFractionDigits: 2,\n              })}\n            </p>\n            <p className=\"cotizaciones_p\">\n              <span className=\"cotizacion\">{moneda2}</span> {`${monIsoBase} `}{\" \"}\n              {cotizacion2.toLocaleString(\"de-DE\", {\n                maximumFractionDigits: 2,\n              })}\n            </p>\n            <p className=\"info_data cotizaciones_p\">\n              ultima actualizacion:{\" \"}\n              <strong>\n                {moment(ultimaActualizacion).format(\"DD/MM/YYYY hh:mm\")} hs\n              </strong>\n            </p>\n          </>\n        ) : (\n          <p className=\"info_data cotizaciones_p\">\n            Momentaneamente el servicio de cotizaciones se encuentra{\" \"}\n            <strong>suspendido.</strong>\n          </p>\n        )}\n      </div>\n    );\n  };","import {\n  Table,\n  Tag,\n  Space,\n  Input,\n  Button,\n  Card,\n  Popover,\n  Divider,\n  Tooltip,\n} from \"antd\";\nimport {\n  DislikeOutlined,\n  LikeOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\nimport \"./index.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NEGOCIOS } from \"../../../graphql/query/Negocios\";\nimport { GET_CONFIGURACION } from \"../../../graphql/query/Configuracion\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport { useContext } from \"react\";\nimport { conversorMonedas } from \"../../../helpers/conversorMonedas\";\nimport Info from \"./Info\";\nimport { infoCotizacion } from \"./InfoCotizacion\";\n\nconst TablaNegocios = () => {\n  const url = window.location.search;\n  const urlParameter = url.split(\"=\");\n  const idCliente = urlParameter[1];\n\n  const searchInput = useRef(null);\n  const [listadoNegocios, setListadoNegocios] = useState([]);\n  const [listadoNegociosFiltrados, setListadoNegociosFiltrados] = useState([]);\n  const [listadoEtiquetas, setListadoEtiquetas] = useState([]);\n  const [totalNegocio, setTotalNegocio] = useState([]);\n  const [totalEtapa, setTotalEtapa] = useState([]);\n  const [cantAbiertos, setCantAbiertos] = useState([]);\n  const [cantGanados, setCantGanados] = useState([]);\n  const [cantPerdidos, setCantPerdidos] = useState([]);\n  const [pipelines, setPipelines] = useState([]);\n  const [tipoFiltro, setTipoFiltro] = useState(\"abierto\");\n  const [monIsoBase, setMonIsoBase] = useState([]);\n\n  const { cotizacionDolar, cotizacionReal, ultimaActualizacion } =\n    useContext(GlobalContext);\n\n  const { data, loading, error } = useQuery(GET_NEGOCIOS, {\n    variables: { idCliente: Number(idCliente) },\n  });\n\n  const { data: getConfiguracion } = useQuery(GET_CONFIGURACION);\n\n  useEffect(() => {\n    if (data && getConfiguracion) {\n      const dataConfig = JSON.parse(getConfiguracion.getConfiguracionResolver);\n      const negocios = JSON.parse(data.getNegociosIframeResolver);\n\n      setListadoNegocios(negocios.dataNeg);\n      setListadoNegociosFiltrados(negocios.dataNeg);\n      setListadoEtiquetas(negocios.dataTags);\n      setPipelines(\n        negocios.dataPipelines.map((item) => {\n          return { text: item.pip_nombre, value: item.pip_nombre };\n        })\n      );\n      let sumaEtapa = 0;\n\n      let conteoAbiertos = 0;\n      let conteoGanados = 0;\n      let conteoPerdidos = 0;\n\n      let totalNegocios = 0;\n\n      negocios.dataNeg.map((element) => {\n        element.neg_estado === 0\n          ? conteoAbiertos++\n          : element.neg_estado === 1\n          ? conteoGanados++\n          : conteoPerdidos++;\n\n        const elemento = element;\n\n        const monedaDefecto = dataConfig[0].mon_id;\n\n        const { nuevoImporte } = conversorMonedas(\n          elemento,\n          monedaDefecto,\n          cotizacionDolar,\n          cotizacionReal\n        );\n\n        sumaEtapa += (nuevoImporte * element.eta_avance) / 100;\n        totalNegocios += nuevoImporte;\n\n        setTotalNegocio(totalNegocios);\n        setTotalEtapa(sumaEtapa);\n        setCantAbiertos(conteoAbiertos);\n        setCantGanados(conteoGanados);\n        setCantPerdidos(conteoPerdidos);\n        setMonIsoBase(dataConfig[0].mon_iso);\n      });\n    }\n  }, [data, getConfiguracion]);\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div\n        style={{\n          padding: 8,\n        }}\n      >\n        <Input\n          ref={searchInput}\n          placeholder={\"Buscar negocio\"}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Buscar\n          </Button>\n          <Button\n            onClick={() => clearFilters && handleReset(clearFilters)}\n            size=\"small\"\n            style={{\n              width: 90,\n            }}\n          >\n            Reiniciar\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        style={{\n          color: filtered ? \"#1890ff\" : undefined,\n        }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    // onFilter: (value, record) =>\n    //   record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    // onFilterDropdownVisibleChange: (visible) => {\n    //   if (visible) {\n    //     setTimeout(() => searchInput.current?.select(), 100);\n    //   }\n    // },\n  });\n\n  const getDate = (date) => {\n    const fecha = date.split(\"T\");\n\n    return fecha[0].split(\"-\").reverse().join(\"/\");\n  };\n\n  const columns = [\n    {\n      title: \"Embudo\",\n      dataIndex: \"pip_nombre\",\n      key: \"pip_nombre\",\n      filters: pipelines,\n      onFilter: (value, record) => {\n        return record.pip_nombre === value;\n      },\n    },\n    {\n      title: \"Etapa\",\n      dataIndex: \"eta_nombre\",\n      key: \"eta_nombre\",\n    },\n    {\n      title: \"Negocio\",\n      dataIndex: \"neg_asunto\",\n      key: \"neg_asunto\",\n      ...getColumnSearchProps(\"neg_asunto\"),\n      render: (dataIndex, item) => {\n        const etiquetasNegocios = listadoEtiquetas.filter(\n          (x) => x.neg_id === item.neg_id\n        );\n        return (\n          <>\n            {dataIndex}\n            <div\n              className={etiquetasNegocios.length > 0 ? \"div-contenedor\" : \"\"}\n            >\n              {etiquetasNegocios.map((element, idx) => {\n                return (\n                  <Popover\n                    key={idx}\n                    content={etiquetasNegocios.map((element) => {\n                      return (\n                        <Tag color={element.etq_color} key={element.etq_id}>\n                          {element.etq_nombre}\n                        </Tag>\n                      );\n                    })}\n                  >\n                    <Tag\n                      color={element.etq_color}\n                      key={element.etq_id}\n                      className=\"tags\"\n                    ></Tag>\n                  </Popover>\n                );\n              })}\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Importe\",\n      dataIndex: \"neg_valor\",\n      key: \"neg_valor\",\n      align: \"right\",\n      sorter: (a, b) => a.neg_valor - b.neg_valor,\n      render: (dataIndex, item) => (\n        <>{`${item.mon_iso} ${dataIndex.toLocaleString(\"de-DE\", {\n          minimumFractionDigits: 0,\n        })}`}</>\n      ),\n    },\n    {\n      title: \"% Etapa\",\n      dataIndex: \"eta_avance\",\n      key: \"eta_avance\",\n      align: \"right\",\n      sorter: (a, b) => a.eta_avance - b.eta_avance,\n    },\n    {\n      title: \"Fecha de Creación\",\n      dataIndex: \"neg_fechacreacion\",\n      key: \"neg_fechacreacion\",\n      align: \"center\",\n      sorter: (a, b) => a.neg_fechacreacion.localeCompare(b.neg_fechacreacion),\n      // sorter: (a, b) =>\n      //   new Date(moment(a.neg_fechacreacion, \"Do MMMM YYYY\").format(\"L\")) -\n      //   new Date(moment(b.neg_fechacreacion, \"Do MMMM YYYY\").format(\"L\")),\n      render: (dataIndex) => getDate(dataIndex),\n    },\n    {\n      title: \"Fecha de Cierre\",\n      dataIndex: \"neg_fechacierre\",\n      key: \"neg_fechacierre\",\n      align: \"center\",\n      sorter: (a, b) => a.neg_fechacierre.localeCompare(b.neg_fechacierre),\n      // sorter: (a, b) =>\n      //   new Date(moment(a.neg_fechacierre, \"Do MMMM YYYY\").format(\"L\")) -\n      //   new Date(moment(b.neg_fechacierre, \"Do MMMM YYYY\").format(\"L\")),\n      render: (dataIndex) => getDate(dataIndex),\n    },\n    {\n      title: \"...\",\n      key: \"tipoCerrado\",\n      align: \"center\",\n      render: (dataIndex, item) => {\n        return (\n          <span>\n            {tipoFiltro === \"cerrado\" ? (\n              <>\n                {item.neg_estado === 1 && (\n                  <Tooltip title=\"Cerrado Ganado\" placement=\"left\">\n                    <LikeOutlined style={{ color: \"green\" }} />\n                  </Tooltip>\n                )}\n                {item.neg_estado === 2 && (\n                  <Tooltip title=\"Cerrado Perdido\" placement=\"left\">\n                    <DislikeOutlined style={{ color: \"red\" }} />\n                  </Tooltip>\n                )}\n              </>\n            ) : null}\n          </span>\n        );\n      },\n    },\n  ];\n\n  const handleClickEstado = (estado) => {\n    setTipoFiltro(estado);\n    if (estado === \"abierto\") {\n      setListadoNegociosFiltrados(\n        listadoNegocios.filter((x) => x.neg_estado === 0)\n      );\n    } else if (estado === \"cerrado\") {\n      setListadoNegociosFiltrados(\n        listadoNegocios.filter((x) => x.neg_estado !== 0)\n      );\n    } else {\n      setListadoNegociosFiltrados(listadoNegocios);\n    }\n  };\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n  };\n\n  return (\n    <>\n      <div className=\"card-wrapper\">\n        <div className=\"card-contadores\">\n          <div\n            className={tipoFiltro === \"total\" ? \"div-secundario dashed\" : \"div-secundario\"}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              handleClickEstado(\"total\");\n            }}\n          >\n            <p className=\"texto\">NEGOCIOS</p>\n            <p className=\"numeros\">{cantAbiertos + cantGanados + cantPerdidos}</p>\n          </div>\n          <Divider\n            type=\"vertical\"\n            style={{\n              height: \"100%\",\n              borderColor: \"#f0f0f0\",\n              borderWidth: \"2px\",\n            }}\n          />\n          <div>\n            <div\n              className={tipoFiltro === \"abierto\" ? \"div-secundario dashed\" : \"div-secundario\"}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                handleClickEstado(\"abierto\");\n              }}\n            >\n              <p className=\"texto\">ABIERTOS</p>\n              <p className=\"numeros\">{cantAbiertos}</p>\n            </div>\n            <hr className=\"hr1\" />\n            <div\n              className={tipoFiltro === \"cerrado\" ? \"div-secundario dashed\" : \"div-secundario\"}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => handleClickEstado(\"cerrado\")}\n            >\n              <p className=\"texto\">CERRADOS</p>\n              <p className=\"numeros\">{cantGanados + cantPerdidos}</p>\n            </div>\n          </div>\n        </div>\n        <Card className=\"card-content\">\n          <div className=\"div-content\">\n            <p className=\"totales\">\n              {`U$D ${totalNegocio.toLocaleString(\"de-DE\", {\n                minimumFractionDigits: 0,\n              })}`}\n            </p>\n            <p className=\"descripcion\">Total negocios</p>\n          </div>\n        </Card>\n        <Card className=\"card-content\">\n          <div className=\"div-content\">\n            <p className=\"totales\">\n              {`U$D ${totalEtapa.toLocaleString(\"de-DE\", {\n                minimumFractionDigits: 0,\n              })}`}\n            </p>\n            <p className=\"descripcion\">Total % por etapa</p>\n          </div>\n        </Card>\n        <div className=\"filter-data\">\n          <Info placement={\"left\"} title={`Cotización ${monIsoBase}`}>\n            {infoCotizacion(\n              monIsoBase,\n              cotizacionDolar,\n              cotizacionReal,\n              ultimaActualizacion\n            )}\n          </Info>\n        </div>\n      </div>\n      <Table\n        rowKey={\"neg_id\"}\n        size={\"small\"}\n        dataSource={listadoNegociosFiltrados}\n        columns={columns}\n        pagination={{\n          position: [\"none\", \"bottomCenter\"],\n        }}\n      />\n    </>\n  );\n};\n\nexport default TablaNegocios;\n","export const conversorMonedas = (\n  elemento,\n  monedaDefecto,\n  cotizacionDolar,\n  cotizacionReal\n) => {\n  let nuevoImporte = 0;\n\n  if (elemento.mon_id !== monedaDefecto) {\n    if (monedaDefecto == 2) {\n      if (elemento.mon_id == 1) {\n        nuevoImporte = elemento.neg_valor * cotizacionDolar;\n      } else {\n        nuevoImporte = elemento.neg_valor * (cotizacionDolar / cotizacionReal);\n      }\n    } else if (monedaDefecto == 3) {\n      if (elemento.mon_id == 1) {\n        nuevoImporte = elemento.neg_valor * cotizacionReal;\n      } else {\n        nuevoImporte = elemento.neg_valor * (cotizacionReal / cotizacionDolar);\n      }\n    } else if (monedaDefecto == 1) {\n      if (elemento.mon_id == 2) {\n        nuevoImporte = elemento.neg_valor * (1 / cotizacionDolar);\n      } else {\n        nuevoImporte = elemento.neg_valor * (1 / cotizacionReal);\n      }\n    }\n  } else {\n    nuevoImporte = elemento.neg_valor;\n  }\n  \n  return {nuevoImporte};\n};\n","import axios from \"axios\";\n\nexport const getCotizacionDolar = async () => {\n  try {\n    const config = {\n      method: \"GET\",\n      url: \"https://api-cotizaciones-tt7h9.ondigitalocean.app/api/dolaroficial\",\n    };\n\n    const res = await axios(config);\n    return res;\n  } catch (error) {\n    console.log(err);\n  }\n};\n","import axios from \"axios\";\n\nexport const getCotizacionReal = async () => {\n  try {\n    const config = {\n      method: \"GET\",\n      url: \"https://api-cotizaciones-tt7h9.ondigitalocean.app/api/real/nacion\",\n    };\n\n    const res = await axios(config);\n    return res;\n  } catch (error) {\n    console.log(err);\n  }\n};\n","import { ApolloProvider } from \"@apollo/client\";\nimport { ConfigProvider } from \"antd\";\nimport { client } from \"./apollo/ApolloClient\";\nimport esES from \"antd/lib/locale/es_ES\";\nimport \"./App.css\";\nimport TablaNegocios from \"./components/ui/table/TablaNegocios\";\nimport { GlobalContext } from \"./components/context/GlobalContext\";\nimport { useState } from \"react\";\nimport {getCotizacionDolar} from '../src/helpers/getCotizacionDolar'; \nimport {getCotizacionReal} from '../src/helpers/getCotizacionReal';\n\nconst App = () => {\n\n  const [cotizacionDolar, setCotizacionDolar] = useState(0);\n  const [cotizacionReal, setCotizacionReal] = useState(0);\n  const [ultimaActualizacion, setUltimaActualizacion] = useState(\"\")\n\n  getCotizacionDolar().then((res) => {\n    if (res.data){\n      setCotizacionDolar(1 / (Number(res.data.venta)));\n      setUltimaActualizacion(res.data.fecha);\n    }\n  });\n\n  getCotizacionReal().then((res) => {\n    if (res.data) setCotizacionReal(1 / (Number(res.data.venta)));\n  });\n\n  return (\n    <GlobalContext.Provider value={{cotizacionDolar, cotizacionReal, ultimaActualizacion}}>\n      <ConfigProvider locale={esES}>\n        <ApolloProvider client={client}>\n          <TablaNegocios />\n        </ApolloProvider>\n      </ConfigProvider>\n    </GlobalContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}